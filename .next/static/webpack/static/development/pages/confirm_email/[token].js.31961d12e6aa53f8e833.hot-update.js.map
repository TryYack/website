{"version":3,"file":"static/webpack/static/development/pages/confirm_email/[token].js.31961d12e6aa53f8e833.hot-update.js","sources":["webpack:///./pages/confirm_email/[token].js"],"sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch'\nimport { useEffect, useState } from 'react'\n\nfunction Index(props) {\n  const router = useRouter();\n\n  useEffect(() => {\n\n\n\n  }, [])\n  return (\n    <React.Fragment>\n      <h1>{router.query.token}</h1>\n      <h1>{props.email}</h1>\n      <h1>{props.token}</h1>\n      <h1>{props.error}</h1>\n    </React.Fragment>\n  );\n}\n\nIndex.getInitialProps = async function(context) {\n  try {\n    const payload = btoa(context.query.token);\n    const { token, email } = JSON.parse(payload);\n    const res = await fetch('http://localhost:8181/api/v1/auth/confirm', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: { 'Content-Type': 'application/json' },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: payload,\n    });\n    const data = await res.json();\n\n    if (!data.success) {\n      return {\n        token: null,\n        email: null,\n        error: 'Sorry there has been an error'\n      }\n    }\n\n    return {\n      token,\n      email,\n      error: null,\n    }\n  } catch (e) {\n    return {\n      token: null,\n      email: null,\n      error: 'Sorry there has been an error'\n    }\n  }\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AARA;AACA;AALA;AAIA;AAJA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AACA;AADA;AAkBA;AACA;AACA;AAHA;AACA;AAlBA;AAAA;AAyBA;AACA;AACA;AAHA;AACA;AAzBA;AAAA;AAAA;AAAA;AA+BA;AACA;AACA;AAHA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqCA;;;;A","sourceRoot":""}