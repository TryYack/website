{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Index(props) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.email), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.token));\n}\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var payload, _JSON$parse, token, email;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = Buffer.from(context.query.token, 'base64').toString('ascii');\n            console.log(payload);\n            _JSON$parse = JSON.parse(payload), token = _JSON$parse.token, email = _JSON$parse.email;\n            return _context.abrupt(\"return\", {\n              token: token,\n              email: email\n              /*\n              try {\n                const res = await fetch('http://localhost:8181/api/v1/auth/confirm', {\n                  method: 'POST',\n                  mode: 'cors',\n                  cache: 'no-cache',\n                  credentials: 'same-origin',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  redirect: 'follow',\n                  referrer: 'no-referrer',\n                  body: JSON.stringify(data),\n                });\n                const data = await res.json();\n                 console.log(`${token} Show data fetched. Count: ${data.length}`);\n                 return {\n                  shows: data.map(entry => entry.show)\n                };\n              } catch (e) {\n                console.log(e)\n                return {\n                  shows: ['ed']\n                }\n              }\n              */\n\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js"],"names":["useRouter","fetch","Index","props","email","token","getInitialProps","context","payload","Buffer","from","query","toString","console","log","JSON","parse"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,KAAX,CAFF,CADF;AAMD;;AAEDH,KAAK,CAACI,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,OADgB,GACNC,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACI,KAAR,CAAcN,KAA1B,EAAiC,QAAjC,EAA2CO,QAA3C,CAAoD,OAApD,CADM;AAEtBC,YAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAFsB,0BAGGO,IAAI,CAACC,KAAL,CAAWR,OAAX,CAHH,EAGdH,KAHc,eAGdA,KAHc,EAGPD,KAHO,eAGPA,KAHO;AAAA,6CAKf;AACLC,cAAAA,KAAK,EAALA,KADK;AAELD,cAAAA,KAAK,EAALA;AAGF;;;;;;;;;;;;;;;;;;;;;;;;;;;AALO,aALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAwCA,eAAeF,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch'\n\nfunction Index(props) {\n  return (\n    <React.Fragment>\n      <h1>{props.email}</h1>\n      <h1>{props.token}</h1>\n    </React.Fragment>\n  );\n}\n\nIndex.getInitialProps = async function(context) {\n  const payload = Buffer.from(context.query.token, 'base64').toString('ascii');\n  console.log(payload)\n  const { token, email } = JSON.parse(payload);\n\n  return {\n    token,\n    email,\n  }\n\n  /*\n  try {\n    const res = await fetch('http://localhost:8181/api/v1/auth/confirm', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(data),\n    });\n    const data = await res.json();\n\n    console.log(`${token} Show data fetched. Count: ${data.length}`);\n\n    return {\n      shows: data.map(entry => entry.show)\n    };\n  } catch (e) {\n    console.log(e)\n    return {\n      shows: ['ed']\n    }\n  }\n  */\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}