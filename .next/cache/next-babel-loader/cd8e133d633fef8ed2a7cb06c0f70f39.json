{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Index(props) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.email), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.token), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.error));\n}\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var payload, _JSON$parse, token, email, res, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            payload = btoa(context.query.token);\n            _JSON$parse = JSON.parse(payload), token = _JSON$parse.token, email = _JSON$parse.email;\n            _context.next = 5;\n            return fetch('http://localhost:8181/api/v1/auth/confirm', {\n              method: 'POST',\n              mode: 'cors',\n              cache: 'no-cache',\n              credentials: 'same-origin',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              redirect: 'follow',\n              referrer: 'no-referrer',\n              body: payload\n            });\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n\n          case 8:\n            data = _context.sent;\n\n            if (data.success) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              token: null,\n              email: null,\n              error: 'Sorry there has been an error'\n            });\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              token: token,\n              email: email,\n              error: null\n            });\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", {\n              token: null,\n              email: null,\n              error: 'Sorry there has been an error'\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js"],"names":["useRouter","fetch","Index","props","email","token","error","getInitialProps","context","payload","btoa","query","JSON","parse","method","mode","cache","credentials","headers","redirect","referrer","body","res","json","data","success","console","log"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACG,KAAX,CAHF,CADF;AAOD;;AAEDJ,KAAK,CAACK,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,YAAAA,OAFc,GAEJC,IAAI,CAACF,OAAO,CAACG,KAAR,CAAcN,KAAf,CAFA;AAAA,0BAGKO,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAHL,EAGZJ,KAHY,eAGZA,KAHY,EAGLD,KAHK,eAGLA,KAHK;AAAA;AAAA,mBAIFH,KAAK,CAAC,2CAAD,EAA8C;AACnEa,cAAAA,MAAM,EAAE,MAD2D;AAEnEC,cAAAA,IAAI,EAAE,MAF6D;AAGnEC,cAAAA,KAAK,EAAE,UAH4D;AAInEC,cAAAA,WAAW,EAAE,aAJsD;AAKnEC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAL0D;AAMnEC,cAAAA,QAAQ,EAAE,QANyD;AAOnEC,cAAAA,QAAQ,EAAE,aAPyD;AAQnEC,cAAAA,IAAI,EAAEZ;AAR6D,aAA9C,CAJH;;AAAA;AAIda,YAAAA,GAJc;AAAA;AAAA,mBAcDA,GAAG,CAACC,IAAJ,EAdC;;AAAA;AAcdC,YAAAA,IAdc;;AAAA,gBAgBfA,IAAI,CAACC,OAhBU;AAAA;AAAA;AAAA;;AAAA,6CAiBX;AACLpB,cAAAA,KAAK,EAAE,IADF;AAELD,cAAAA,KAAK,EAAE,IAFF;AAGLE,cAAAA,KAAK,EAAE;AAHF,aAjBW;;AAAA;AAAA,6CAwBb;AACLD,cAAAA,KAAK,EAALA,KADK;AAELD,cAAAA,KAAK,EAALA,KAFK;AAGLE,cAAAA,KAAK,EAAE;AAHF,aAxBa;;AAAA;AAAA;AAAA;AA8BpBoB,YAAAA,OAAO,CAACC,GAAR;AA9BoB,6CA+Bb;AACLtB,cAAAA,KAAK,EAAE,IADF;AAELD,cAAAA,KAAK,EAAE,IAFF;AAGLE,cAAAA,KAAK,EAAE;AAHF,aA/Ba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAuCA,eAAeJ,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch'\n\nfunction Index(props) {\n  return (\n    <React.Fragment>\n      <h1>{props.email}</h1>\n      <h1>{props.token}</h1>\n      <h1>{props.error}</h1>\n    </React.Fragment>\n  );\n}\n\nIndex.getInitialProps = async function(context) {\n  try {\n    const payload = btoa(context.query.token);\n    const { token, email } = JSON.parse(payload);\n    const res = await fetch('http://localhost:8181/api/v1/auth/confirm', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: { 'Content-Type': 'application/json' },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: payload,\n    });\n    const data = await res.json();\n\n    if (!data.success) {\n      return {\n        token: null,\n        email: null,\n        error: 'Sorry there has been an error'\n      }\n    }\n\n    return {\n      token,\n      email,\n      error: null,\n    }\n  } catch (e) {\n    console.log(e)\n    return {\n      token: null,\n      email: null,\n      error: 'Sorry there has been an error'\n    }\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}