{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport { useEffect, useState } from 'react';\n\nfunction Index(props) {\n  var router = useRouter();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    setLoading(true);\n    setError(false);\n    console.log(router.query.token);\n    var payload = btoa(router.query.token);\n\n    var _JSON$parse = JSON.parse(payload),\n        token = _JSON$parse.token,\n        email = _JSON$parse.email;\n\n    fetch('http://localhost:8181/api/v1/auth/confirm', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: payload\n    });\n    then(function (res) {\n      return res.json();\n    });\n    then(function (data) {\n      console.log(data);\n      setLoading(false);\n      if (!data.success) setError(true);\n    })[\"catch\"](function (e) {\n      setLoading(false);\n      setError(true);\n    });\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, router.query.token));\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js"],"names":["useRouter","fetch","useEffect","useState","Index","props","router","error","setError","loading","setLoading","console","log","query","token","payload","btoa","JSON","parse","email","method","mode","cache","credentials","headers","redirect","referrer","body","then","res","json","data","success","e"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADoB,kBAEMG,QAAQ,CAAC,KAAD,CAFd;AAAA;AAAA,MAEbI,KAFa;AAAA,MAENC,QAFM;;AAAA,mBAGUL,QAAQ,CAAC,KAAD,CAHlB;AAAA;AAAA,MAGbM,OAHa;AAAA,MAGJC,UAHI;;AAKpBR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,KAAP,CAAaC,KAAzB;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACV,MAAM,CAACO,KAAP,CAAaC,KAAd,CAApB;;AALc,sBAMWG,IAAI,CAACC,KAAL,CAAWH,OAAX,CANX;AAAA,QAMND,KANM,eAMNA,KANM;AAAA,QAMCK,KAND,eAMCA,KAND;;AAQdlB,IAAAA,KAAK,CAAC,2CAAD,EAA8C;AACjDmB,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,IAAI,EAAE,MAF2C;AAGjDC,MAAAA,KAAK,EAAE,UAH0C;AAIjDC,MAAAA,WAAW,EAAE,aAJoC;AAKjDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OALwC;AAMjDC,MAAAA,QAAQ,EAAE,QANuC;AAOjDC,MAAAA,QAAQ,EAAE,aAPuC;AAQjDC,MAAAA,IAAI,EAAEZ;AAR2C,KAA9C,CAAL;AAUAa,IAAAA,IAAI,CAAC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAAJ,CAAJ;AACAF,IAAAA,IAAI,CAAC,UAAAG,IAAI,EAAI;AACXpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACArB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,UAAI,CAACqB,IAAI,CAACC,OAAV,EAAmBxB,QAAQ,CAAC,IAAD,CAAR;AACpB,KALG,CAAJ,UAMO,UAAAyB,CAAC,EAAI;AACVvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATD;AAUD,GA7BQ,EA6BN,EA7BM,CAAT;AA+BA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,MAAM,CAACO,KAAP,CAAaC,KAAlB,CADF,CADF;AAKD;;AAED,eAAeV,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch'\nimport { useEffect, useState } from 'react'\n\nfunction Index(props) {\n  const router = useRouter();\n  const [error, setError] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    setError(false)\n\n    console.log(router.query.token)\n    const payload = btoa(router.query.token);\n    const { token, email } = JSON.parse(payload);\n\n    fetch('http://localhost:8181/api/v1/auth/confirm', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: { 'Content-Type': 'application/json' },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: payload,\n    })\n    then(res => res.json())\n    then(data => {\n      console.log(data)\n      setLoading(false)\n\n      if (!data.success) setError(true)\n    })\n    .catch(e => {\n      setLoading(false)\n      setError(true)\n    })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <h1>{router.query.token}</h1>\n    </React.Fragment>\n  );\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}