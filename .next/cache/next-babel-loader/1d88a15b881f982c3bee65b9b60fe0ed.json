{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Index(props) {\n  var router = useRouter();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, router.query.token, \" \", props.shows.length));\n}\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var token, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = context.query.token;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context.sent;\n            console.log(\"\".concat(token, \" Show data fetched. Count: \").concat(data.length));\n            return _context.abrupt(\"return\", {\n              shows: data.map(function (entry) {\n                return entry.show;\n              })\n            });\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", {\n              shows: ['ed']\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/website/pages/confirm_email/[token].js"],"names":["useRouter","fetch","Index","props","router","query","token","shows","length","getInitialProps","context","res","json","data","console","log","map","entry","show"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,KAAlB,OAA0BH,KAAK,CAACI,KAAN,CAAYC,MAAtC,CADF,CADF;AAKD;;AAEDN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACdJ,YAAAA,KADc,GACJI,OAAO,CAACL,KADJ,CACdC,KADc;AAAA;AAAA;AAAA,mBAIFL,KAAK,CAAC,8CAAD,CAJH;;AAAA;AAIdU,YAAAA,GAJc;AAAA;AAAA,mBAKDA,GAAG,CAACC,IAAJ,EALC;;AAAA;AAKdC,YAAAA,IALc;AAOpBC,YAAAA,OAAO,CAACC,GAAR,WAAeT,KAAf,wCAAkDO,IAAI,CAACL,MAAvD;AAPoB,6CASb;AACLD,cAAAA,KAAK,EAAEM,IAAI,CAACG,GAAL,CAAS,UAAAC,KAAK;AAAA,uBAAIA,KAAK,CAACC,IAAV;AAAA,eAAd;AADF,aATa;;AAAA;AAAA;AAAA;AAapBJ,YAAAA,OAAO,CAACC,GAAR;AAboB,6CAcb;AACLR,cAAAA,KAAK,EAAE,CAAC,IAAD;AADF,aAda;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAeL,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch'\n\nfunction Index(props) {\n  const router = useRouter();\n\n  return (\n    <React.Fragment>\n      <h1>{router.query.token} {props.shows.length}</h1>\n    </React.Fragment>\n  );\n}\n\nIndex.getInitialProps = async function(context) {\n  const { token } = context.query;\n\n  try {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n\n    console.log(`${token} Show data fetched. Count: ${data.length}`);\n\n    return {\n      shows: data.map(entry => entry.show)\n    };\n  } catch (e) {\n    console.log(e)\n    return {\n      shows: ['ed']\n    }\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}